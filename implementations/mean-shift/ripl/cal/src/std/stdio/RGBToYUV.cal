/*
 * Copyright (c) 2014, Project: Rathlin, Heriot-Watt University, Edinburgh, UK
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   * Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *   * Neither the name of the Heriot-Watt University nor the names of its
 *     contributors may be used to endorse or promote products derived from this
 *     software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

// Author: Deepayan Bhowmik <d.bhowmik@hw.ac.uk>


package std.stdio;

actor RGBToYUV() int(size=32) R, int(size=32) G, int(size=32) B ==>
			uint(size=8) Y, uint(size=8) U, uint(size=8) V:

	int yt;
	int ut;
	int vt;
	action R:[r], G:[g], B:[b] ==> Y:[y], U:[u], V:[v]
	var
		uint(size=8) y, uint(size=8) u, uint(size=8) v
	do

		yt := ( (  66 * r + 129 * g +  25 * b + 128) >> 8) +  16;
		ut := ( ( -38 * r -  74 * g + 112 * b + 128) >> 8) + 128;
		vt := ( ( 112 * r -  94 * g -  18 * b + 128) >> 8) + 128;


		if (yt > 0) then
			if (yt < 255) then
				y := yt;
			else
				y := 255;
			end
		else
			y := 0;
		end

		if (ut > 0) then
			if (ut < 255) then
				u := ut;
			else
				u := 255;
			end
		else
			u := 0;
		end

		if (vt > 0) then
			if (vt < 255) then
				v := vt;
			else
				v := 255;
			end
		else
			v := 0;
		end

	end

end