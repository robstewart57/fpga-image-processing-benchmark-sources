/*
 * Copyright (c) 2017, Project: Rathlin, Heriot-Watt University, Edinburgh, UK
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   * Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *   * Neither the name of the Heriot-Watt University nor the names of its
 *     contributors may be used to endorse or promote products derived from this
 *     software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

// Author: Rob Stewart R.Stewart@hw.ac.uk

package std.stdio;

actor YUVToRGB() uint(size=8) Y, uint(size=8) U, uint(size=8) V
             ==> int(size=32) R, int(size=32) G, int(size=32) B:

	function clip(int x) --> int :
	 if x > 255 then 255 else
	 if x < 0 then 0 else x
	 end
	 end
	end

	convert: action Y:[y], U:[u], V:[v] ==> R:[r], G:[g], B:[b]
	var int c = y-16,
	    int d = u - 128,
	    int e = v - 128,
	    uint(size=8) r,
	    uint(size=8) g,
	    uint(size=8) b
	do
	  r := clip((298*c + 409*e + 128) >> 8);
	  g := clip((298*c - 100*d - 208*e + 128) >> 8);
	  b := clip((298*c + 516*d + 128) >> 8);
	end

end